/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10
#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT
#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  //  600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    macros {
        Ky_MyPwd: Ky_MyPwd {
            label = "Ky_MyPwd";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings = <&kp N0 &kp N1 &kp N2 &kp N3 &kp N4 &kp N5>;
        };

        end_enter: end_enter {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp END &kp ENTER>;
            label = "END_ENTER";
        };

        end_semi_enter: end_semi_enter {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp END &kp SEMI &kp ENTER>;
            label = "END_SEMI_ENTER";
        };
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
            flavor = "tap-preferred";
        };

        ltq: ltq {
            compatible = "zmk,behavior-hold-tap";
            label = "LTQ";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <180>;
            flavor = "tap-preferred";
        };

        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTO_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <135>;
            quick-tap-ms = <0>;
        };
    };

    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
            timeout-ms = <200>;
        };

        bkt_left {
            bindings = <&mt RIGHT_BRACKET LEFT_BRACKET>;
            key-positions = <18 19>;
            timeout-ms = <200>;
        };

        bkt_right {
            bindings = <&mt LEFT_BRACKET RIGHT_BRACKET>;
            key-positions = <20 21>;
            timeout-ms = <200>;
        };

        par_left {
            bindings = <&mt RIGHT_PARENTHESIS LEFT_PARENTHESIS>;
            key-positions = <3 4>;
            timeout-ms = <200>;
        };

        par_right {
            bindings = <&mt LEFT_PARENTHESIS RIGHT_PARENTHESIS>;
            key-positions = <9 10>;
            timeout-ms = <200>;
        };

        brace_left {
            bindings = <&mt RIGHT_BRACE LEFT_BRACE>;
            key-positions = <15 16>;
            timeout-ms = <200>;
        };

        brace_right {
            bindings = <&mt LEFT_BRACE RIGHT_BRACE>;
            key-positions = <25 26>;
            timeout-ms = <200>;
        };

        bac_pipe {
            bindings = <&mt PIPE BACKSLASH>;
            key-positions = <14 15>;
            timeout-ms = <200>;
        };

        minus_under_left {
            bindings = <&mt UNDER MINUS>;
            key-positions = <32 33>;
            timeout-ms = <200>;
        };

        comma_dot {
            bindings = <&mt DOT COMMA>;
            key-positions = <44 45>;
            timeout-ms = <200>;
        };

        bslh_fslh {
            bindings = <&mt BSLH SLASH>;
            key-positions = <43 44>;
            timeout-ms = <200>;
        };

        minus_under_right {
            bindings = <&mt UNDER MINUS>;
            key-positions = <12 11>;
            timeout-ms = <200>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <35 36>;
        };

        question {
            bindings = <&kp QMARK>;
            key-positions = <42 43>;
        };

        equal_plus {
            bindings = <&mt PLUS EQUAL>;
            key-positions = <1 2>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qwerty_layer {
            //  ---------------------------------------------------------------------------------
            //  |GRAVE |N1  |N2  |N3        |N4          |N5  |N6  |N7          |N8        |N9  |N0  |MINUS |EQUAL|BSPC|
            //  |TAB   |Q   |W   |E         |R           |T   |Y   |U           |I         |O   |P   |LBKT  |RBKT |BSLH|
            //  |CAPS  |A   |S   |D         |&ltq 2 F    |G   |H   |J           |K         |L   |SEMI|SQT   |ENTER|    |
            //  |LSHIFT|Z   |X   |C         |&ltq 3 V    |B   |N   |M           |COMMA     |DOT |FSLH|RSHIFT|     |    |
            //  |LCTRL |LGUI|LALT|&ltq 4 DEL|&ltq 1 SPACE|    |    |&ltq 1 SPACE|&ltq 5 INS|RGUI|RALT|RCTRL |     |    |

            bindings = <
&kp GRAVE   &kp F1    &kp F2    &kp F4  &kp F7     &kp F8  &kp F10    &kp F11  &kp F12    &kp PRINTSCREEN  &kp DELETE  &kp MINUS   &kp EQUAL  &kp BSPC
&kp TAB     &kp Q     &kp W     &kp E   &kp R      &kp T   &kp Y      &kp U    &kp I      &kp O            &kp P       &kp LBKT    &kp RBKT   &kp BSLH
&kp LCTRL   &kp A     &kp S     &kp D   &kp F      &kp G   &kp H      &kp J    &kp K      &kp L            &kp SEMI    &kp SQT     &kp ENTER
&kp LSHIFT  &kp Z     &kp X     &kp C   &ltq 3 V   &kp B   &kp N      &kp M    &kp COMMA  &kp DOT          &kp SLASH   &kp RSHIFT
&kp ESCAPE  &kp LGUI  &kp LALT  &mo 1   &kp SPACE          &kp SPACE  &mo 2    &mo 3      &mo 4            &mo 5
            >;

            label = "Qwerty";
        };

        num_macro_layer {
            //  ---------------------------------------------------------------------------------
            //  |N0  |     |            |           |     |     |                        |     |    |    |    |    |    |    |
            //  |N0  |N6   |N7          |N8         |N9   |DOT  |&mt KP_SLASH KP_MULTIPLY|N4   |N5  |N6  |    |    |    |    |
            //  |    |SLASH|MULTIPLY    |MINUS      |PLUS |ENTER|PLUS                    |1    |2   |3   |    |    |    |    |
            //  |    |HOME |END         |PG_UP      |PG_DN|BSPC |MINUS                   |N0   |DOT |DOT |    |    |    |    |
            //  |    |     |LC(LS(HOME))|LC(LS(END))|     |     |                        |ENTER|    |    |    |    |    |    |

            bindings = <
&none   &trans        &trans        &trans        &trans         &trans        &trans         &trans        &trans        &trans        &trans        &trans                &none                  &trans
&none   &none         &none         &none         &none          &none         &none          &none         &none         &none         &trans        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4   &kp NUMBER_5  &kp NUMBER_6   &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &trans                &trans
&trans  &kp PLUS      &kp MINUS     &kp ASTERISK  &kp SLASH      &none         &none          &none         &none         &none         &trans        &trans
&trans  &trans        &none         &none         &kp BACKSPACE                &kp BACKSPACE  &trans        &trans        &trans        &trans
            >;

            label = "Number";
        };

        symbol_layer {
            //  ---------------------------------------------------------------------------------
            //  |    |F1  |F2       |F3   |F4  |F5  |     |     |    |          |               |    |    |    |
            //  |    |F6  |&mt F7 UP|F8   |F9  |F10 |     |HOME |UP  |END       |               |    |    |    |
            //  |    |LEFT|DOWN     |RIGHT|    |F11 |LEFT |RIGHT|DOWN|&end_enter|&end_semi_enter|    |    |    |
            //  |    |    |         |     |    |F12 |PG_DN|PG_UP|    |          |               |    |    |    |
            //  |    |    |         |     |    |    |     |     |    |          |               |    |    |    |

            bindings = <
&trans  &none            &none        &none     &none       &none        &trans     &trans         &trans        &trans                &trans                 &trans  &none   &none
&trans  &none            &none        &none     &none       &none        &trans     &none          &none         &none                 &trans                 &trans  &trans  &trans
&trans  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT  &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans  &trans
&trans  &none            &none        &none     &none       &none        &none      &none          &trans        &trans                &trans                 &trans
&trans  &trans           &trans       &trans    &trans                   &trans     &trans         &trans        &trans                &trans
            >;

            label = "Function";
        };

        direct_layer {
            //  ---------------------------------------------------------------------------------
            //  |CARET|AMPS|STAR|LPAR|RPAR|    |    |    |    |    |    |    |    |    |
            //  |     |    |    |    |    |    |    |    |    |    |    |    |    |    |
            //  |     |    |    |    |    |    |    |    |    |    |    |    |    |    |
            //  |     |    |    |    |    |    |    |    |    |    |    |    |    |    |
            //  |     |    |    |    |    |    |    |    |    |    |    |    |    |    |

            bindings = <
&none   &none           &none         &none        &none          &trans  &trans  &trans  &trans  &trans  &trans  &trans  &none   &trans
&trans  &trans          &kp UP_ARROW  &trans       &trans         &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LEFT_ARROW  &kp DOWN      &kp RIGHT    &trans         &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp HOME        &kp END       &kp PAGE_UP  &kp PAGE_DOWN  &none   &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans          &trans        &trans       &trans                 &trans  &trans  &trans  &trans  &trans
            >;

            label = "Symbol";

            //sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
            //sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        media_layer {
            //  ---------------------------------------------------------------------------------
            //  |BT_CLR      |BT_SEL 0|BT_SEL 1|BT_SEL 2|BT_SEL 3  |BT_SEL 4 |     |     |    |          |               |    |    |&bootloader|
            //  |EP_TOG      |        |        |ENTER   |INS       |         |     |HOME |UP  |END       |               |    |    |           |
            //  |R           |        |        |        |LS(LC(N8))|LC(ENTER)|LEFT |RIGHT|DOWN|&end_enter|&end_semi_enter|    |    |           |
            //  |&out OUT_TOG|        |        |        |          |         |PG_DN|PG_UP|    |          |               |    |    |           |
            //  |            |        |        |        |          |         |     |     |    |          |               |    |    |           |

            bindings = <
&none     &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_BRI_DEC  &kp C_BRI_INC  &trans  &trans  &trans  &trans  &none   &trans  &none   &bootloader
&none     &trans      &trans        &none         &none          &trans         &trans  &none   &none   &none   &trans  &trans  &trans  &trans
&kp CLCK  &trans      &trans        &trans        &none          &none          &none   &none   &none   &none   &none   &trans  &trans
&none     &trans      &trans        &trans        &trans         &trans         &none   &none   &trans  &trans  &trans  &trans
&trans    &trans      &trans        &trans        &trans                        &trans  &trans  &trans  &trans  &trans
            >;

            label = "Control";
        };

        ble_layer {
            //  ---------------------------------------------------------------------------------
            //  |    |    |    |    |    |    |              |               |              |         |    |     |    |    |
            //  |    |    |    |    |    |    |              |&mkp LCLK      |&mmv MOVE_UP  |&mkp RCLK|    |     |    |    |
            //  |    |    |    |    |    |    |&mmv MOVE_LEFT|&mmv MOVE_RIGHT|&mmv MOVE_DOWN|         |    |     |    |    |
            //  |    |    |    |    |    |    |&mkp MCLK     |&mkp MB4       |&mkp MB5      |         |UP  |     |    |    |
            //  |    |    |    |    |    |    |              |               |              |LEFT     |DOWN|RIGHT|    |    |

            bindings = <
&bt BT_CLR  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &none   &trans
&trans      &trans        &trans        &trans        &trans        &trans  &trans  &none   &none   &none   &trans  &trans  &trans  &trans
&kp CAPS    &trans        &trans        &trans        &trans        &trans  &none   &none   &none   &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans  &none   &none   &none   &trans  &none   &trans
&trans      &trans        &trans        &trans        &trans                &trans  &trans  &none   &none   &none
            >;

            label = "Mouse";
        };

        mouse_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans     &trans     &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans     &trans     &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &mkp LCLK  &mkp RCLK  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans     &trans     &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans     &trans     &trans  &trans
            >;
        };
    };
};
